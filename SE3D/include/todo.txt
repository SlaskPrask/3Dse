main flow is java
 remove getenv since all calls originate from java thread we already know env for it

ignore mouse on black borders
 if (in black border)
  mouseShroud[i]=1; if (pressed) add as release event (inbounds xy)
  ;
  in move if (mouseShroud[i]&&not in black border)
  add as a press event (inbounds xy)

persistent scenes
 oot pause menu like
 objects tied to scene and not engine

separate font shader?
 borders

function to escape default draw stuff and use custom gl instead
 a funciton to return to default draw stuff

remove using namespaces from .h namespaces

sensors
also check which are available
 accelerometer
 gravity
 magnetometer
 gyroscope
 light
 proximity
vibration
battery
signal
volume buttons
 read states
 disable volume control

other mouse buttons and wheel on touchables
 multiple mouses on touchables (multitouch like possu)

inherit tags
collision object rotation variable (pos&orient combined)
rest of collision shapes
collision debug draw

more draw shapes
 oval
 line
  thick line (pixel width default)

initial object positioning thing (hitbox things)

gamepad

show message compability

default font
default texture
 actually use it

const &everything

multishader support
 with defines / includes / files
 var part
 color application part
 etc
 and compose all

tweak inheritance to only cpp (wish it was h)

hidden assets
resource compiler
 combine to one file
 generate .h/cpp with variables to all locations/names
 translation files
  generate .h/cpp with variables to all translation values